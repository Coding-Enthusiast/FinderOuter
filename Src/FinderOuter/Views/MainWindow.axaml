<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:FinderOuter.ViewModels;assembly=FinderOuter"
        xmlns:models="clr-namespace:FinderOuter.Models;assembly=FinderOuter"
        xmlns:mvvm="clr-namespace:FinderOuter.Backend.Mvvm.Converters"
        xmlns:views="clr-namespace:FinderOuter.Views"
        mc:Ignorable="d" d:DesignHeight="770" d:DesignWidth="1000"
        x:CompileBindings="True"
        x:DataType="vm:MainWindowViewModel"
        x:Class="FinderOuter.Views.MainWindow"
        Height="770"
        MinHeight="770"
        Width="1020"
        MinWidth="830"
        Icon="/Assets/Icon.ico"
        Title="{Binding WindowTitle}"
        FontSize="14"
        Background="{DynamicResource BackgroundColor}">

  <Design.DataContext>
    <vm:MainWindowViewModel/>
  </Design.DataContext>

  <Window.DataTemplates>
    <DataTemplate DataType="{x:Type vm:HelpViewModel}">
      <views:HelpView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:MissingBase16ViewModel}">
      <views:MissingBase16View/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MissingBase58ViewModel}">
      <views:MissingBase58View/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MissingMiniPrivateKeyViewModel}">
      <views:MissingMiniPrivateKeyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MissingBip38PassViewModel}">
      <views:MissingBip38PassView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:CorePassViewModel}">
      <views:CorePassView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MissingMnemonicViewModel}">
      <views:MissingMnemonicView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MissingMnemonicPassViewModel}">
      <views:MissingMnemonicPassView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MissingBip32PathViewModel}">
      <views:MissingBip32PathView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MissingArmoryViewModel}">
      <views:MissingArmoryView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MissingEncodingViewModel}">
      <views:MissingEncodingView/>
    </DataTemplate>
  </Window.DataTemplates>

  <Window.Resources>
    <mvvm:StateToBitmapConverter x:Key="imgConv"/>
    <Color x:Key="BackgroundColor">#FFFBFBFB</Color>
  </Window.Resources>

  <Grid ColumnDefinitions="200,*" RowDefinitions="*,40">

    <!--Left side collumn (containing option list, warnings, speeds, version, about button)-->
    <Grid RowDefinitions="*,auto,auto,auto,auto" Grid.Column="0" Grid.Row="0">
      <ListBox ItemsSource="{Binding OptionList}"
               SelectedItem="{Binding SelectedOption}"
               SelectionMode="Toggle"
               IsEnabled="{Binding !IsWorking}"
               Grid.Row="0">
        <ListBox.Styles>
          <Style Selector="ListBox">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="TextBlock.Foreground" Value="#FF000000"/>
            <Setter Property="Background" Value="#e5e5e5"/>
            <Setter Property="BorderBrush" Value="#FF000000"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
          </Style>

          <Style Selector="ListBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="12"/>
          </Style>

          <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
          </Style>
        </ListBox.Styles>

        <ListBox.DataTemplates>
          <DataTemplate DataType="{x:Type vm:OptionVmBase}">
            <TextBlock Text="{Binding OptionName}"/>
          </DataTemplate>
        </ListBox.DataTemplates>
      </ListBox>

      <TextBlock Text="{Binding UnstableWarning}"
                 IsVisible="{Binding IsUnstable}"
                 TextWrapping="Wrap"
                 FontWeight="Bold"
                 Foreground="Red"
                 Margin="3"
                 Grid.Row="1"/>
      <TextBlock Text="{Binding DebugWarning}"
                 IsVisible="{Binding IsDebug}"
                 TextWrapping="Wrap"
                 FontWeight="Bold"
                 Foreground="Red"
                 Margin="3"
                 Grid.Row="2"/>

      <Grid ColumnDefinitions="auto,*" RowDefinitions="auto,auto,auto,auto" Grid.Column="0" Grid.Row="3" Background="#e5e5e5">
        <Expander Header="Settings" Margin="5,0,0,10" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" IsExpanded="False">
          <Grid ColumnDefinitions="auto,auto,*,auto,auto">
            <Button Classes="Help"
                    FontSize="8"
					          Height="18" Width="18"
					          Margin="0,0,2,0"
					          VerticalAlignment="Center"
                    Command="{Binding OpenKBCommand}"
					          CommandParameter="{Binding ThreadKb}"
					          Grid.Column="0"/>
            <TextBlock Text="Cores:" Grid.Column="1"/>
            <Slider Value="{Binding Settings.CoreCount}"
                    Minimum="1"
					Maximum="{Binding Settings.MaxCoreCount}"
					IsVisible="{Binding IsCappedSettings}"
                    VerticalAlignment="Center"
                    TickFrequency="1"
                    IsSnapToTickEnabled="True"
                    SmallChange="1" LargeChange="1"
                    Grid.Column="2">
              <Slider.Styles>
                <Style Selector="Slider /template/Thumb">
                  <Setter Property="ToolTip.Tip" Value="{Binding $parent[Slider].Value,Mode=OneWay,StringFormat='\{0:n0\} core'}" />
                  <Setter Property="ToolTip.Placement" Value="Top"/>
                  <Setter Property="ToolTip.VerticalOffset" Value="-5"/>
                  <Setter Property="ToolTip.HorizontalOffset" Value="-10"/>
                </Style>
              </Slider.Styles>
            </Slider>
            <TextBlock Text="{Binding Settings.CoreCount}"
					   IsVisible="{Binding IsCappedSettings}"
					   Grid.Column="3"/>
            <NumericUpDown Value="{Binding Settings.CoreCount}"
                                 IsVisible="{Binding !IsCappedSettings}"
                     Height="40" Width="70"
                     Grid.Column="3"/>
            <Button Content="Override" Command="{Binding OverrideSettings}"
                IsEnabled="{Binding IsCappedSettings}"
                Height="40"
                Grid.Column="4"/>
          </Grid>
        </Expander>

        <TextBlock Text="Checked:"
                   Margin="5,0,5,0"
                   Grid.Column="0" Grid.Row="1"/>
        <TextBlock Text="{Binding SelectedOption.Result.TotalChecked, StringFormat=\{0:N0\}}"
                   ToolTip.Tip="Total keys checked"
                   MinWidth="20"
                   Grid.Column="1" Grid.Row="1"/>

        <TextBlock Text="Speed:"
                   Margin="5,0,5,0"
                   Grid.Column="0" Grid.Row="2"/>
        <TextBlock Text="{Binding SelectedOption.Result.Speed, StringFormat=\{0:N0\}}"
                   ToolTip.Tip="Estimated speed (keys/second)"
                   MinWidth="20"
                   Grid.Column="1" Grid.Row="2"/>

        <TextBlock Text="Time left:"
                   Margin="5,0,5,0"
                   Grid.Column="0" Grid.Row="3"/>
        <TextBlock Text="{Binding SelectedOption.Result.Remaining, StringFormat=\{0:hh\\:mm\\:ss\}}"
                   ToolTip.Tip="Estimated time remaining"
                   MinWidth="30"
                   Grid.Column="1" Grid.Row="3"/>
      </Grid>

      <Grid ColumnDefinitions="auto,*" Grid.Column="0" Grid.Row="4" Background="#e5e5e5">
        <Button Command="{Binding OpenAbout}"
                ToolTip.Tip="About and Donate"
                BorderThickness="0"
                Background="Transparent"
                Width="60"
                Grid.Column="0"
                Grid.RowSpan="2">
          <Image Source="/Assets/Donate.png"/>
        </Button>

        <Border BorderThickness="1" BorderBrush="Blue" Background="#FFADD8EC" Margin="8" Grid.Column="1">
          <TextBlock Text="{Binding VerString, Mode=OneTime}"
                     FontWeight="Bold"
                     FontFamily="Comic Sans MS"
                     TextAlignment="Center"/>
        </Border>
      </Grid>

    </Grid>

    <!--Right side collumn (containing find button and selected VM)-->
    <Grid Margin="3,0,0,0" RowDefinitions="auto,auto,*,180" Grid.Column="1" Grid.Row="0">
      <Grid ColumnDefinitions="*,auto" Grid.Row="0">
        <Button Content="Find!"
                Command="{Binding SelectedOption.FindCommand}"
                IsVisible="{Binding IsOptionSelected}"
                Margin="3,6,3,3"
                Height="40"
                Grid.Column="0"/>
        <Button Content="{Binding SelectedOption.ExampleButtonName}"
                Command="{Binding SelectedOption.ExampleCommand}"
                IsVisible="{Binding IsOptionSelected}"
                IsEnabled="{Binding SelectedOption.HasExample}"
                ToolTip.Tip="Click again for next example."
                Margin="3,6,3,3"
                Height="40"
                Width="125"
                Grid.Column="1"/>
      </Grid>
      <TextBlock Text="{Binding SelectedOption.Description}"
                 TextWrapping="Wrap"
                 Margin="3"
                 Grid.Row="1"/>

      <ContentControl Content="{Binding SelectedOption}"
                      Margin="2"
                      Grid.Row="2"/>
      <ContentControl Content="{Binding HelpVm}"
                      IsVisible="{Binding !IsOptionSelected}"
                      Margin="2"
                      Grid.Row="2"/>

      <TextBox Text="{Binding SelectedOption.Result.Message, Mode=OneWay}"
               IsVisible="{Binding IsOptionSelected}"
               UseFloatingWatermark="False"
               ScrollViewer.VerticalScrollBarVisibility="Auto"
               IsReadOnly="True"
               Grid.Row="3"/>
    </Grid>


    <!--2 items at the bottom of the window (state and progressbar)-->
    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2">
      <Image Source="{Binding SelectedOption.Result.CurrentState, Converter={StaticResource imgConv}, Mode=OneWay}"
             Margin="3"/>
      <TextBlock Text="{Binding SelectedOption.Result.CurrentState}"
                 VerticalAlignment="Center"
                 Margin="3"/>
    </StackPanel>

    <ProgressBar IsVisible="{Binding SelectedOption.Result.IsProgressVisible}"
                 Value="{Binding SelectedOption.Result.Progress}"
                 ShowProgressText="True"
                 Margin="3,0,3,3"
                 Grid.Column="1"
               Grid.Row="2">
      <ProgressBar.Styles>
        <Style Selector="ProgressBar /template/ Border">
          <Setter Property="CornerRadius" Value="0,20,20,0"/>
        </Style>
      </ProgressBar.Styles>
    </ProgressBar>

  </Grid>
</Window>
